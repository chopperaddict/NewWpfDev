<Window x:Class="Views.Genericgrid"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Views"
        xmlns:users="clr-namespace:UserControls"
        mc:Ignorable="d"
     WindowChrome.ResizeGripDirection="BottomRight"
	    ResizeMode="CanResizeWithGrip"
        Loaded="IsLoaded"
           Title="Genericgrid" Height="450" Width="800"
            x:Name="Gengrid">
    <Window.Resources>

        <Style x:Key="ButtonSlant" TargetType="Button">
            <!--Default layout-->
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <!--These defaults can be overriden by the Button Code in the design-->
            <Setter Property="Height" Value="50" />
            <Setter Property="Width" Value="150" />
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush 
                                    StartPoint="0.2, 0" EndPoint="0, 1">
                        <GradientStop Offset="0" Color="#DF000000" />
                        <GradientStop Offset="4" Color="#69000000" />
                        <GradientStop Offset="0.5" Color="#69EB5E00" />
                        <GradientStop Offset="6" Color="#69000000" />
                        <GradientStop Offset="1" Color="#DF000000" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <!--Lets change the Border as well but use the colors
			defined in the Buttons declaration in the xaml code-->

            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border  x:Name="border"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="0,0,0,0">
                            <ContentPresenter
							Margin="2"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							RecognizesAccessKey="True" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <!--Now to handle those pesky Triggers-->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="TextElement.Foreground"  Value="{StaticResource Green6}"/>
                    <Setter Property="BorderBrush"  Value="{StaticResource White2}"/>
                    <Setter Property="BorderThickness"  Value="3"/>
                    <Setter Property="FontSize"  Value="14"/>
                    <Setter Property="Background" >
                        <Setter.Value>
                            <LinearGradientBrush 
                                    StartPoint="0, 1" EndPoint="0.2, 0">
                                <GradientStop Offset="0" Color="#DF000000" />
                                <GradientStop Offset="4" Color="#69000000" />
                                <GradientStop Offset="0.5" Color="#69EB5E00" />
                                <GradientStop Offset="6" Color="#69000000" />
                                <GradientStop Offset="1" Color="#DF000000" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <!--Makes gradient fill work horizontally-->
                            <RadialGradientBrush Center="0.5, 1.0">
                                <GradientStop Offset="0" Color="Beige" />
                                <GradientStop Offset="1" Color="Green" />
                            </RadialGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsEnabled" Value="False"/>
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="Background">
                            <Setter.Value>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <GradientStop Color="LightGray" Offset="0.35" />
                                    <GradientStop Color="DarkGray" Offset="1" />
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                    </MultiTrigger.Setters>
                </MultiTrigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="BankAccountGridStyle" TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush 
                                    StartPoint="0.2, 0" EndPoint="0, 1">
                        <GradientStop Offset="0" Color="#DF000000" />
                        <GradientStop Offset="4" Color="#69000000" />
                        <GradientStop Offset="0.5" Color="#69EB5E00" />
                        <GradientStop Offset="6" Color="#69000000" />
                        <GradientStop Offset="1" Color="#DF000000" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!--// Window IS FOCUSED-->

                <!--#region Special Triggers for Generic style Tables-->
                <!--Clever stuff Eh ??-->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Foreground" Value="{StaticResource Black0}" />
                        <Setter Property="FontWeight" Value="SemiBold" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="false" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Background" Value="{StaticResource Red0}" />
                        <Setter Property="Foreground" Value="{StaticResource White0}" />
                        <Setter Property="FontWeight" Value="DemiBold" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="false" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="true" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Background" Value="{StaticResource Orange1}" />
                        <Setter Property="Foreground" Value="{StaticResource White0}" />
                        <Setter Property="FontWeight" Value="DemiBold" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <!--#endregion Special Triggers for Non Bamk/Customer Tables-->

                <!--#endregion Triggers-->
            </Style.Triggers>
        </Style>

    </Window.Resources>
    
    <Grid Background="{StaticResource Black2OrangeSlant}" >
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="85"/>
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>

        <users:DatagridControl x:Name="GenGridCtrl"   
            Grid.Row="0" 
            Background="Transparent" 
            FontSize="16"
            FontWeight="Normal"
            Cellstyle="{StaticResource BankAccountGridStyle}"
            BorderBrush="{StaticResource Blue5}"
            AlternateBackground="Cyan"
            HeaderBackground="Blue"
            HeaderForeground="White"
            Margin="5 0 5 0"
            Tablename="BankAccount"/>
            <!--Foreground="Red"-->

        <ComboBox x:Name="SqlTables" 
                  Grid.Row="1" HorizontalAlignment="Left" 
                  Width="200" Height="25"  FontSize="16"
                  Margin="155,9,0,0" 
                   VerticalAlignment="Top"
                  SelectionChanged="SqlTables_SelectionChanged"/>
        <Label Content="Select SQL Table : " 
                 HorizontalAlignment="Left"               
               Foreground="White"  
               Width="131"
               FontSize="16"
                 Margin="15,4,0,54" Grid.Row="1"/>
        <CheckBox x:Name="ToggleColumnHeaders" Checked="ToggleColumnHeaders_Checked" IsChecked="false" Visibility="Collapsed"
                  Content="Toggle headers" HorizontalAlignment="Left" Foreground="White" FontSize="16" VerticalAlignment="Top"
                  Click="ToggleColumnHeaders_Click"  Height="20" Margin="180,13,0,0" Grid.Row="1" Width="132" RenderTransformOrigin="0.5,0.5"/>

        <!--//***********************************//-->
        <!--#region Buttons-->
        <!--//***********************************//-->
        <Button Height="35" Width="160" Content="Show Full Columns Schema" 
                HorizontalAlignment="Right"
                 VerticalAlignment="Top"
                Click="ShowColumnInfo_Click" Margin="0,6,142,0" 
                BorderBrush="LightGreen"                
                Style="{StaticResource ButtonSlant}"
                FontSize="12"
                Grid.Row="1" />
        <Button x:Name="SaveButton" Height="35" Width="160" Content="Save as NEW Table" 
                HorizontalAlignment="Right"
                 VerticalAlignment="Top"
                Click="CreateNewTable" Margin="0,46,142,0" 
                BorderBrush="LightGreen"                
                Style="{StaticResource ButtonSlant}"
                Grid.Row="1" 
                FontSize="12"/>

        <Button x:Name="CloseBtn" Width="130" 
                Height="NaN" 
                Content="Close Window" 
                HorizontalAlignment="right"
                Grid.Row="1"
                BorderBrush="Red"                
                Click="Close_Click" Margin="0,5,5,5" 
                Style="{StaticResource ButtonSlant}"/>

        <!--//***********************************//-->
        <!--#endregion Buttons-->
        <!--//***********************************//-->

        <Label Content="Save New Table As : " Grid.Row="1" 
                 HorizontalAlignment="Left"
               Foreground="White"  
               Width="151"
               FontSize="16"
                 Margin="5,43,0,2"/>
        <TextBox x:Name="NewTableName" Width="200" Foreground="Red"  Grid.Row="1" FontSize="16"
                  HorizontalAlignment="Left"  HorizontalContentAlignment="Center" Text="Enter New Table Name ...." Padding="0 1 0 0"
                KeyDown="statusbar_KeyDown"
                 Margin="155,45,0,10" GotKeyboardFocus="NewTableName_GotKeyboardFocus" />
        <Label x:Name="statusbar"
            Content="Status  information" Grid.Row="2" 
                 HorizontalAlignment="Stretch"
               HorizontalContentAlignment="Center"
               Background="Red"
               Foreground="White"  
               FontSize="15"
               FontStyle="Italic"/>

        <!--//***********************************//-->
        <!--#region RowSelectionDialog-->
        <!--//***********************************//-->

        <Grid x:Name="FieldSelectionGrid" Margin="0,30,0,0" 
              Grid.Row="0" Width="350"
              Visibility="Collapsed" 
              Background="{StaticResource Black7}">
            
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="35"/>
                <RowDefinition Height="25"/>
            </Grid.RowDefinitions>
            
            <DataGrid x:Name="ColNames"
                 Grid.Row="0"
                 Background="Cyan"
                 SelectionMode="Extended"
                      SelectionChanged="ColNames_SelectionChanged"
                 Margin="10,10,10,9" >
            </DataGrid>
            
            <TextBlock x:Name="Prompt" 
                   Grid.Row="2"
                   Text="Hold Ctrl and Click on each column you want included..."
                   TextAlignment="Center"
                   Padding="0 2 0 0"
                   Margin="10 0 10 0"
                   Background="Red"
                   Foreground="White" UseLayoutRounding="True"/>
            
            <Button x:Name="GoBtn" Width="100" Height="30" 
                HorizontalAlignment="Right" Margin="0,-10,10,0"
                VerticalAlignment="Center"
                Content="Go!"
                Click="GoBtn_Click"
                Background="Green" Foreground="Red" Grid.Row="1"/>
            
            <Button x:Name="stopBtn" Width="100" Height="30" 
                HorizontalAlignment="Right" Margin="0,-10,120,0"
                VerticalAlignment="Center"
                Content="Cancel"
                Click="stopBtn_Click"
                Background="Red" Foreground="White" Grid.Row="1"/>
            
        </Grid>
        <!--//***********************************//-->
        <!--#endregion RowSelectionDialog-->
        <!--//***********************************//-->

    </Grid>
</Window>
    
    
