<Window x:Class="Views.Genericgrid"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Views"
        xmlns:users="clr-namespace:UserControls"
        mc:Ignorable="d"
        WindowChrome.ResizeGripDirection="BottomRight"
	    ResizeMode="CanResizeWithGrip"        
        Title="Generic SQL Tables - Right Click for more information..."
        TextElement.Foreground="White"
        Height="550" Width="800"
        MinHeight="550" MinWidth="800"
        Loaded="Grid_Loaded"
        KeyDown="InfoGrid_KeyDown"
        x:Name="Gengrid">
    <Window.Resources>

        <Style x:Key="YellowTextGradient" TargetType="TextBlock">
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="Button.IsMouseOver" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="TextElement.Foreground" >
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                <GradientStop Color="White" Offset="1.0"/>
                                <GradientStop Color="Yellow" Offset="0.0"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="TextElement.Background" >
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                <GradientStop Color="#FF684900" Offset="1.0"/>
                                <GradientStop Color="#FFAB9300" Offset="0"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="TextElement.Background"  >
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                <GradientStop Color="#FF684900" Offset="0.414"/>
                                <GradientStop Color="{StaticResource ClrWhite4}" Offset="0.953"/>
                                <!--<GradientStop Color="#FF0000" Offset="1"/>-->
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>

                    <Setter Property="TextElement.Foreground"  >
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                                <!--<GradientStop Color="#FF684900" Offset="1.0"/>-->
                                <GradientStop Color="Black" Offset="0.0"/>
                                <GradientStop Color="Cyan" Offset="0.2"/>
                                <GradientStop Color="Cyan" Offset="0.4"/>
                                <GradientStop Color="White" Offset="1.0"/>
                                <!--<GradientStop Color="#FF0000" Offset="1"/>-->
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <!--<Style x:Key="ComboxItemsStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <ControlTemplate.Triggers>
                            -->
        <!--<Trigger Property="IsSelected" Value="True">
                                <Setter Property="TextElement.Background" Value="{StaticResource Red5}"/>
                                <Setter Property="TextElement.Foreground" Value="{StaticResource White0}"/>
                            </Trigger>-->
        <!--
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="false"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Background" Value="{StaticResource Cyan6}"/>
                                    <Setter Property="Foreground" Value="{StaticResource Cyan0}"/>
                                    -->
        <!--<Setter Property="CbItemText.Background" Value="{StaticResource Cyan1}"/>-->
        <!--
                                </MultiTrigger.Setters>
                            </MultiTrigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Background" Value="{StaticResource Red5}"/>
                                    <Setter Property="Foreground" Value="{StaticResource White0}"/>
                                    -->
        <!--<Setter Property="CbItemText.Background" Value="{StaticResource Red5}"/>-->
        <!--
                                </MultiTrigger.Setters>
                            </MultiTrigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="true"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Background" Value="{StaticResource Red5}"/>
                                    <Setter Property="Foreground" Value="{StaticResource White0}"/>
                                    -->
        <!--<Setter Property="CbItemText.Background" Value="{StaticResource Red5}"/>-->
        <!--
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->


        <!--- Dont understand why it has to be mouseover=false & ExitAction, but it works that way, not if true-->
        <Style TargetType="ComboBox" x:Key="ComboBoxStyle5">
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="False"/>
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="Background" Value="Red"/>
                        <Setter Property="Foreground" Value="White"/>
                    </MultiTrigger.Setters>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True"/>
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="Background" Value="Red"/>
                        <Setter Property="Foreground" Value="White"/>
                    </MultiTrigger.Setters>
                </MultiTrigger>
            </Style.Triggers>
        </Style>


        <!--<ContextMenu x:Key="ContextMen2" Width="240" HasDropShadow="True">
            <ContextMenu.Resources>
            </ContextMenu.Resources>
            <MenuItem Style="{StaticResource MenuItemBlue}">
                <MenuItem.Header>
                    <TextBlock 
                                Text="Close Context Menu"
                                FontSize="16"
                                 Height="25"
                                Padding="10 0 0 0"
                                Margin="0 0 0 0"
                                Width="350"/>
                </MenuItem.Header>
            </MenuItem>

            <MenuItem  x:Name="ShowInformation" Click="ShowInfo"
                 Style="{StaticResource MenuItemBlue}">
                <MenuItem.Header>
                    <TextBlock 
                                 Text="Show Information"
                                FontSize="16"
                                 Height="25"
                                Padding="10 0 0 0"
                                Margin="0 0 0 0"                                
                                Width="350"/>
                </MenuItem.Header>
            </MenuItem>

            <MenuItem   x:Name="SelectedRowsOnly" Click="SaveSelectedOnly" 
                    Style="{StaticResource MenuItemBlue}">
                <MenuItem.Header>
                    <TextBlock 
                                Text="Save Selected Rows only"
                                FontSize="16"
                                 Height="25"
                                Padding="10 0 0 0"
                                Margin="0 0 0 0"
                                Width="350"/>
                </MenuItem.Header>
            </MenuItem>
        </ContextMenu>-->

        <Style x:Key="ButtonSlant" TargetType="Button">
            <!--Default layout-->
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <!--These defaults can be overriden by the Button Code in the design-->
            <Setter Property="Height" Value="50" />
            <Setter Property="Width" Value="150" />
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush 
                                    StartPoint="0.2, 0" EndPoint="0, 1">
                        <GradientStop Offset="0" Color="#DF000000" />
                        <GradientStop Offset="4" Color="#69000000" />
                        <GradientStop Offset="0.5" Color="#69EB5E00" />
                        <GradientStop Offset="6" Color="#69000000" />
                        <GradientStop Offset="1" Color="#DF000000" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <!--Lets change the Border as well but use the colors
			defined in the Buttons declaration in the xaml code-->

            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border  x:Name="border"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="0,0,0,0">
                            <ContentPresenter
							Margin="2"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							RecognizesAccessKey="True" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <!--Now to handle those pesky Triggers-->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="TextElement.Foreground"  Value="{StaticResource Green6}"/>
                    <Setter Property="BorderBrush"  Value="{StaticResource White2}"/>
                    <Setter Property="BorderThickness"  Value="3"/>
                    <Setter Property="FontSize"  Value="14"/>
                    <Setter Property="Background" >
                        <Setter.Value>
                            <LinearGradientBrush 
                                    StartPoint="0, 1" EndPoint="0.2, 0">
                                <GradientStop Offset="0" Color="#DF000000" />
                                <GradientStop Offset="4" Color="#69000000" />
                                <GradientStop Offset="0.5" Color="#69EB5E00" />
                                <GradientStop Offset="6" Color="#69000000" />
                                <GradientStop Offset="1" Color="#DF000000" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <!--Makes gradient fill work horizontally-->
                            <RadialGradientBrush Center="0.5, 1.0">
                                <GradientStop Offset="0" Color="Beige" />
                                <GradientStop Offset="1" Color="Green" />
                            </RadialGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsEnabled" Value="False"/>
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="Background">
                            <Setter.Value>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <GradientStop Color="LightGray" Offset="0.35" />
                                    <GradientStop Color="DarkGray" Offset="1" />
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                    </MultiTrigger.Setters>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="BankAccountGridStyle" TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush 
                                    StartPoint="0.2, 0" EndPoint="0, 1">
                        <GradientStop Offset="0" Color="#DF000000" />
                        <GradientStop Offset="4" Color="#69000000" />
                        <GradientStop Offset="0.5" Color="#69EB5E00" />
                        <GradientStop Offset="6" Color="#69000000" />
                        <GradientStop Offset="1" Color="#DF000000" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Style.Triggers>

                <!--#region Special Triggers for Generic style Tables-->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Foreground" Value="{StaticResource Black0}" />
                        <Setter Property="FontWeight" Value="SemiBold" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="false" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Background" Value="{StaticResource Red0}" />
                        <Setter Property="Foreground" Value="{StaticResource White0}" />
                        <Setter Property="FontWeight" Value="DemiBold" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="false" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="true" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Background" Value="{StaticResource Orange1}" />
                        <Setter Property="Foreground" Value="{StaticResource White0}" />
                        <Setter Property="FontWeight" Value="DemiBold" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <!--#endregion Special Triggers for Non Bamk/Customer Tables-->

                <!--#endregion Triggers-->
            </Style.Triggers>
        </Style>

    </Window.Resources>

    <Grid Background="{StaticResource Black2OrangeSlant}">
        <Grid.RowDefinitions>
            <RowDefinition Height="1"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="85"/>
            <RowDefinition Height="25" />
            <RowDefinition Height="55" />
        </Grid.RowDefinitions>

        <!--//************************//-->
        <!--#region info panel-->
        <!--//************************//-->
        <Grid x:Name="InfoGrid"
              Grid.Row="1" 
              Grid.RowSpan="1"
               Margin="0 0 0 15" 
               Background="Transparent"  
               Height="450" Width="760"
               Panel.ZIndex="250"
               Visibility="Collapsed" >

            <Border BorderBrush="Yellow" 
                    Background="{StaticResource Orange2BlackSlant}"                    
                    Margin="0 5 0 0"
                    BorderThickness="2 10 2 15" 
                    VerticalAlignment="Top" 
                    Height="320" 
                    Width="760" 
                    Visibility="Visible"
                    Panel.ZIndex="251">
                <Grid
                    Grid.Row="0"
                    Height="{Binding ActualHeight, ElementName=InfoGrid}"
                    Width="{Binding ActualWidth, ElementName=InfoGrid}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0"
                    Margin="0 5 0 0"
                    VerticalAlignment="Top" 
                    Height="330" 
                    Width="760" 
                    FontSize="16"
                    FontWeight="DemiBold"
                    Foreground="Red"
                    Background="Cyan"
                               TextAlignment="Center"
                    Text="Press Escape or Double-Click on thiis panel to close it...."
                    Panel.ZIndex="251"/>

                    <FlowDocumentScrollViewer x:Name="RTBox" 
                                      Grid.Row="3" 
                                      Height="250" Width="750" 
                                      Panel.ZIndex="252" 
                                          
                                      Margin="0 0,5,170"
                                      MouseDoubleClick="RTBox_MouseRightButtonDown"
                                      Visibility="Visible"/>
                </Grid>
            </Border>
        </Grid>
        <!--//************************//-->
        <!--#endregion info panel-->
        <!--//************************//-->

        <!--//************************//-->
        <!--#region Filtering-->
        <!--//************************//-->
        <Grid x:Name="Filtering" 
              Grid.Row="1"
                  Margin="0 0 0 0" 
                  Height="225" Width="500"
                  Background="Cyan"  
                  Panel.ZIndex="255"
                  Visibility="Collapsed" 
                  >
            <Border x:Name="filterdlg"
                Grid.Row="0" Grid.RowSpan="1"
                BorderBrush="{StaticResource Red3}" 
                BorderThickness="2 20 2 15" 
                Height="{Binding ActualHeight, ElementName=Filtering}"
                Width="{Binding ActualWidth, ElementName=Filtering}"
                Panel.ZIndex="256"
                Visibility="Visible"
                >
                <!--Background="{StaticResource Black6}"-->
                <!--Background="{StaticResource Black8}"-->
                <Grid
                        Height="{Binding ActualHeight, ElementName=Filterdlg}"
                        Width="{Binding ActualWidth, ElementName=Filterdlg}">
                    <TextBlock x:Name="FilterText"
                            Text="    Enter a fully qualified SQL fllter clause (without the 'Where') into the field below"
                            Height="39"
                            Padding="5 0 0 5"
                            VerticalAlignment="Top"
                            Margin="0,5,8,0"
                            FontSize="16"
                            FontWeight="DemiBold"
                            TextWrapping="Wrap" 
                            Background="Transparent" 
                               TextAlignment="Center"
                            Panel.ZIndex="256"
                            Foreground="Black" 
                            Visibility="Visible"/>

                    <Label Content="Where" 
                            Height="30" Width="56" 
                            FontSize="16" 
                           FontWeight="DemiBold"
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Top"
                            Foreground="Black" 
                            Background="{StaticResource Cyan2}"
                            Margin="10,71,0,0"
                            Padding="5 3 0 0"
                            Visibility="Visible"/>
                    <TextBox x:Name="filtertext" 
                            Background="{StaticResource White1}" 
                             CaretBrush="Blue" 
                            Foreground="Red"
                            Focusable="True"
                            Height="80" Width="408" 
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            TextAlignment="Center" 
                             TextWrapping="Wrap"
                            Margin="78,0,0,0" 
                            Padding="5 1 5 0" 
                             Panel.ZIndex="256"
                            FontSize="16" 
                            Text="Enter SQL filtering code here ...."
                             Visibility="Visible" TabIndex="1"/>
                    <Button Height="35" Width="120 "
                            Click="Filter_Click"
                            Style="{StaticResource ButtonSlant}"
                            Foreground="White" 
                            Content="Apply Filter" 
                            Margin="0 0 10 10" 
                            Panel.ZIndex="256"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            Visibility="Visible"/>
                    <Button Height="35" Width="120 " 
                            Click="closeFilter"
                            Foreground="LightGreen" 
                            Style="{StaticResource ButtonSlant}"
                            Content="Cancel" 
                            Margin="0 24 140 10" 
                            Panel.ZIndex="256"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            Visibility="Visible"/>
                </Grid>
            </Border>
        </Grid>
        <!--//************************//-->
        <!--#endregion Filtering-->
        <!--//************************//-->


        <!--//************************//-->
        <!--#region display Grid-->
        <!--//************************//-->
        <!--ContextMenu="{StaticResource ContextMenu2}"-->
            <!--Cellstyle="{StaticResource BankAccountGridStyle}"-->
        <users:DatagridControl x:Name="GenGridCtrl"   
            Grid.Row="1" 
            Background="Transparent" 
            Foreground="Black"
            FontSize="16"
            FontWeight="Normal"
            AlternateBackground="Cyan"
            HeaderBackground="Blue"
            HeaderForeground="White"                               
            Margin="5 0 5 0"
            Visibility="Visible"
            Tablename="BankAccount" >
            <!--BorderBrush="{StaticResource Blue5}"-->
        </users:DatagridControl>
        <!--//************************//-->
        <!--#endregion display Grid-->
        <!--//************************//-->

        <!--//************************//-->
        <!--#region Main Btn Panel-->
        <!--//************************//-->

        <ComboBox x:Name="SqlTables" 
                  Grid.Row="2" HorizontalAlignment="Left" 
                  Width="200" Height="25"  FontSize="16"
                  Margin="132,9,0,0" 
                   VerticalAlignment="Top"
                  HorizontalContentAlignment="Center"
                  SelectionChanged="SqlTables_SelectionChanged"/>
        <Label Content="Select SQL Table : " 
                 HorizontalAlignment="Left"               
               Foreground="White"  
               Width="116"
               FontSize="14"
                 Margin="15,7,0,51" Grid.Row="2"/>
        <CheckBox x:Name="ToggleColumnHeaders" Checked="ToggleColumnHeaders_Checked" 
                  IsChecked="false" 
                  Content="Toggle headers" 
                  HorizontalAlignment="Left"
                  Foreground="White" 
                  FontSize="16" 
                  VerticalAlignment="Top"
                  Click="ToggleColumnHeaders_Click" 
                  Height="20" 
                  Margin="180,29,0,0" 
                  Grid.Row="1"
                  Width="132" 
                  RenderTransformOrigin="0.5,0.5"
                  Visibility="Collapsed"/>

        <Button x:Name="CloseBtn" Width="67" 
                Height="NaN" 
                Content="Close" 
                HorizontalAlignment="Right"
                Grid.Row="2"
                BorderBrush="Red"                
                Click="Close_Click" Margin="0,46,5,5" 
                Style="{StaticResource ButtonSlant}"/>

        <!--***********************************
        #endregion Buttons
        ***********************************-->

        <TextBlock x:Name="Reccount" 
                Grid.Row="2"
                   FontSize="18"
                   FontWeight="Bold"
                   TextAlignment="Center"
                   Padding="0 2 0 0"
                Height="30" Width="68" 
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                   Margin="0 0 5 47"
                   Background="Orange"
                   Foreground="Black"/>


        <Label Content="Save New Table As : " Grid.Row="2" 
                 HorizontalAlignment="Left"
               Foreground="White"  
               Width="136"
               FontSize="14"
                 Margin="1,46,0,24" Grid.RowSpan="2"/>
        <TextBox x:Name="NewTableName" Width="200" Foreground="Red"  Grid.Row="2" FontSize="16"
                  HorizontalAlignment="Left"  HorizontalContentAlignment="Center" Text="Enter New Table Name ...." Padding="0 1 0 0"
                KeyDown="statusbar_KeyDown"
                 Margin="132,45,0,10" GotKeyboardFocus="NewTableName_GotKeyboardFocus"
                 />
        <TextBlock x:Name="caption"
            Text="Selected Table Status  information" Grid.Row="3" 
                 HorizontalAlignment="Stretch"
               TextAlignment="Center"
               TextWrapping="Wrap"
               Background="{StaticResource Red2}"
               Padding="0 2 0 0"
               Foreground="{StaticResource White1}"  
               FontSize="15"
               FontWeight="DemiBold"
               FontStyle="Normal"/>

        <TextBlock x:Name="statusbar"
            Text="" Grid.Row="4" 
                 HorizontalAlignment="Stretch"
               TextAlignment="Center"
               TextWrapping="Wrap"
               Background="{StaticResource White7}"
               Padding="0 2 0 0"
               Foreground="White"  
               FontSize="15"
               FontStyle="Italic"/>
        <!--//************************//-->
        <!--#endregion Main Btn Panel-->
        <!--//************************//-->

        <!--***********************************-->
        <!--#region RowFillteringDialog-->
        <!--***********************************-->

        <Grid x:Name="FieldSelectionGrid"
              Margin="0,30,0,0" 
              Grid.Row="1" Width="350"
              Visibility="Collapsed" 
              Background="{StaticResource Black7}">

            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="35"/>
                <RowDefinition Height="25"/>
            </Grid.RowDefinitions>

            <DataGrid x:Name="ColNames"
                 Grid.Row="0"
                 Background="Cyan"
                 SelectionMode="Extended"
                 SelectionChanged="ColNames_SelectionChanged"
                 Margin="10,10,10,9" >
            </DataGrid>

            <TextBlock x:Name="Prompt" 
                   Grid.Row="2"
                   Text="Hold Ctrl and Click on each column you want included..."
                   TextAlignment="Center"
                   Padding="0 2 0 0"
                   Margin="10 0 10 0"
                   Background="Red"
                   Foreground="White" UseLayoutRounding="True"/>

            <Button x:Name="GoBtn" Width="100" Height="30" 
                HorizontalAlignment="Right" Margin="0,-10,10,0"
                VerticalAlignment="Center"
                Content="Go!"
                Click="GoBtn_Click"
                Background="Green" Foreground="Red" Grid.Row="1"/>

            <Button x:Name="stopBtn" Width="100" Height="30" 
                HorizontalAlignment="Right" Margin="0,-10,120,0"
                VerticalAlignment="Center"
                Content="Cancel"
                Click="stopBtn_Click"
                Background="Red" Foreground="White" Grid.Row="1"/>

        </Grid>
        <TextBlock
            Foreground="White"
            Background="Transparent"
            FontSize="15"
            Text="Use Dropdown below to select available processing "
            Grid.Row="2" HorizontalAlignment="Left" 
            Width="Auto" Height="26"  
            Margin="360,11,0,0" 
            VerticalAlignment="Top"
            />
            <ComboBox x:Name="OptionsList" 
            Grid.Row="2" HorizontalAlignment="Left" 
            Width="270" Height="30"  FontSize="18"
            Margin="403,41,0,0" 
            SelectionChanged="OptionsList_Selected"
            VerticalAlignment="Top"
            HorizontalContentAlignment="Center"   >
            <ComboBoxItem >
                <TextBlock Text="Processing Options .." Style="{StaticResource YellowTextGradient}"
                        TextAlignment="Center" Width="245" />
            </ComboBoxItem>
           <ComboBoxItem>
                <TextBlock Text="Show Full Schema" Style="{StaticResource YellowTextGradient}"
                        TextAlignment="Center" Width="245" />
            </ComboBoxItem>
            <ComboBoxItem>
                <TextBlock Text="Reload Tables List" Style="{StaticResource YellowTextGradient}"
                        TextAlignment="Center" Width="245" />
            </ComboBoxItem>
            <ComboBoxItem>
                <TextBlock Text="Save as New Table" Style="{StaticResource YellowTextGradient}"
                        TextAlignment="Center" Width="245" />
            </ComboBoxItem>
            <ComboBoxItem>
                <TextBlock Text="Filter table data" Style="{StaticResource YellowTextGradient}"
                        TextAlignment="Center" Width="245" />
            </ComboBoxItem>
            <ComboBoxItem>
                <TextBlock Text="Save Selected Rows to Table" Style="{StaticResource YellowTextGradient}"
                        TextAlignment="Center" Width="245" />
            </ComboBoxItem>
          </ComboBox>

        <!--***********************************-->
        <!--#endregion RowFilteringDialog-->
        <!--***********************************-->

    </Grid>
</Window>
    
   